{"ast":null,"code":"var _jsxFileName = \"/Users/chris/ironhack/module3/project-management-fullstack/project-management-client/src/pages/ProjectListPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ProjectCard from \"./../components/ProjectCard\";\nimport AddProject from \"../components/AddProject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectListPage() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const getAllProjects = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/projects`).then(response => setProjects(response.data)).catch(error => console.log(error));\n  };\n\n  // We set this effect will run only once, after the initial render\n  // by setting the empty dependency array - []\n  useEffect(() => {\n    getAllProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ProjectListPage\",\n    children: [/*#__PURE__*/_jsxDEV(AddProject, {\n      refreshProjects: getAllProjects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n      ...project\n    }, project._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectListPage, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = ProjectListPage;\nexport default ProjectListPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectListPage\");","map":{"version":3,"names":["useState","useEffect","axios","ProjectCard","AddProject","jsxDEV","_jsxDEV","ProjectListPage","_s","projects","setProjects","getAllProjects","get","process","env","REACT_APP_API_URL","then","response","data","catch","error","console","log","className","children","refreshProjects","fileName","_jsxFileName","lineNumber","columnNumber","map","project","_id","_c","$RefreshReg$"],"sources":["/Users/chris/ironhack/module3/project-management-fullstack/project-management-client/src/pages/ProjectListPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport ProjectCard from \"./../components/ProjectCard\";\nimport AddProject from \"../components/AddProject\";\n\n\nfunction ProjectListPage() {\n  const [projects, setProjects] = useState([]);\n\n  const getAllProjects = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/projects`)\n      .then((response) => setProjects(response.data))\n      .catch((error) => console.log(error));\n  };\n\n  // We set this effect will run only once, after the initial render\n  // by setting the empty dependency array - []\n  useEffect(() => {\n    getAllProjects();\n  }, [] );\n\n  \n  return (\n    <div className=\"ProjectListPage\">\n      \n      <AddProject refreshProjects={getAllProjects} />\n      \n      { projects.map((project) => <ProjectCard key={project._id} {...project} />  )} \n       \n    </div>\n  );\n}\n\nexport default ProjectListPage;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3BT,KAAK,CACFU,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,eAAc,CAAC,CACpDC,IAAI,CAAEC,QAAQ,IAAKP,WAAW,CAACO,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC9CC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC;;EAED;EACA;EACAnB,SAAS,CAAC,MAAM;IACdU,cAAc,EAAE;EAClB,CAAC,EAAE,EAAE,CAAE;EAGP,oBACEL,OAAA;IAAKiB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAE9BlB,OAAA,CAACF,UAAU;MAACqB,eAAe,EAAEd;IAAe;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EAE7CpB,QAAQ,CAACqB,GAAG,CAAEC,OAAO,iBAAKzB,OAAA,CAACH,WAAW;MAAA,GAAuB4B;IAAO,GAAxBA,OAAO,CAACC,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAiB,CAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEzE;AAEV;AAACrB,EAAA,CA1BQD,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AA4BxB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
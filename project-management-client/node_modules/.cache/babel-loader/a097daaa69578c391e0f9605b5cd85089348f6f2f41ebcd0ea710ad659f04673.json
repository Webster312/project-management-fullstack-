{"ast":null,"code":"var _jsxFileName = \"/Users/chris/ironhack/module3/project-management-fullstack/project-management-client/src/components/AddTask.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5005\";\nfunction AddTask(props) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // We need the project id when creating the new task\n    const {\n      projectId\n    } = props;\n    // Create an object representing the body of the POST request\n    const requestBody = {\n      title,\n      description,\n      projectId\n    };\n    axios.post(`${API_URL}/api/tasks`, requestBody).then(response => {\n      // Reset the state to clear the inputs\n      setTitle(\"\");\n      setDescription(\"\");\n\n      // Invoke the callback function coming through the props\n      // from the ProjectDetailsPage, to refresh the project details\n      props.refreshProject();\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddTask\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTask, \"/6NNF0FwJJsXLHIYvDErymUSBps=\");\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","API_URL","AddTask","props","_s","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","projectId","requestBody","post","then","response","refreshProject","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/chris/ironhack/module3/project-management-fullstack/project-management-client/src/components/AddTask.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nconst API_URL = \"http://localhost:5005\";\n\n\nfunction AddTask(props) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // We need the project id when creating the new task\n    const { projectId } = props;\n    // Create an object representing the body of the POST request\n    const requestBody = { title, description, projectId };\n\n    axios\n      .post(`${API_URL}/api/tasks`, requestBody)\n      .then((response) => {\n        // Reset the state to clear the inputs\n        setTitle(\"\");\n        setDescription(\"\");\n      \n        // Invoke the callback function coming through the props\n        // from the ProjectDetailsPage, to refresh the project details\n        props.refreshProject();\n      })\n      .catch((error) => console.log(error));\n  };\n\n  \n  return (\n    <div className=\"AddTask\">\n      <h3>Add New Task</h3>\n      \n      <form onSubmit={handleSubmit}>\n        <label>Title:</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n\n        <label>Description:</label>\n        <textarea\n          type=\"text\"\n          name=\"description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n\n        <button type=\"submit\">Add Task</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTask;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG,uBAAuB;AAGvC,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAGlD,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;;IAElB;IACA,MAAM;MAAEC;IAAU,CAAC,GAAGT,KAAK;IAC3B;IACA,MAAMU,WAAW,GAAG;MAAER,KAAK;MAAEE,WAAW;MAAEK;IAAU,CAAC;IAErDd,KAAK,CACFgB,IAAI,CAAE,GAAEb,OAAQ,YAAW,EAAEY,WAAW,CAAC,CACzCE,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAV,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;;MAElB;MACA;MACAL,KAAK,CAACc,cAAc,EAAE;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC;EAGD,oBACEnB,OAAA;IAAKsB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBvB,OAAA;MAAAuB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAErB3B,OAAA;MAAM4B,QAAQ,EAAEnB,YAAa;MAAAc,QAAA,gBAC3BvB,OAAA;QAAAuB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACrB3B,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,OAAO;QACZC,KAAK,EAAE1B,KAAM;QACb2B,QAAQ,EAAGtB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACuB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1C,eAEF3B,OAAA;QAAAuB,QAAA,EAAO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC3B3B,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,aAAa;QAClBC,KAAK,EAAExB,WAAY;QACnByB,QAAQ,EAAGtB,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACuB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChD,eAEF3B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAACvB,EAAA,CArDQF,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAuDhB,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}